import {
  AccordionPanel
} from "./chunk-EEME6VO6.js";
import "./chunk-6WRANP7C.js";
import {
  KeyboardDirectionMixin
} from "./chunk-E2TMSNCK.js";
import "./chunk-KJAG6HMH.js";
import "./chunk-IOVQFHDT.js";
import "./chunk-3PUWOMHD.js";
import "./chunk-ZXFVDR5S.js";
import "./chunk-Q67J475U.js";
import "./chunk-LJ4MV4IY.js";
import "./chunk-QP3VSZP2.js";
import "./chunk-L374UGML.js";
import "./chunk-F4BRGDFL.js";
import "./chunk-26L5GZ27.js";
import "./chunk-6MLXWJPB.js";
import "./chunk-SIJH5ZJL.js";
import "./chunk-NDTPYS3H.js";
import "./chunk-PUNGR6GP.js";
import "./chunk-FNKOZGIT.js";
import "./chunk-OFT7WUTJ.js";
import "./chunk-YELGMEWD.js";
import {
  ThemableMixin
} from "./chunk-4QQOFFK5.js";
import {
  ElementMixin
} from "./chunk-EIJOWZ4H.js";
import "./chunk-RTIK5DCO.js";
import "./chunk-VUWTYCVF.js";
import "./chunk-CFT6JE4A.js";
import "./chunk-ODRVAHJL.js";
import "./chunk-CQH3N2QY.js";
import {
  FlattenedNodesObserver
} from "./chunk-LQ5QREVC.js";
import {
  PolymerElement
} from "./chunk-BK2NTPF4.js";
import "./chunk-A5QYNKPK.js";
import "./chunk-ZNZEAP57.js";
import "./chunk-54PPSA5Z.js";
import {
  html
} from "./chunk-BPZOCPE6.js";
import "./chunk-CJPRR7ZF.js";

// node_modules/@vaadin/accordion/src/vaadin-accordion.js
var Accordion = class extends KeyboardDirectionMixin(ThemableMixin(ElementMixin(PolymerElement))) {
  static get template() {
    return html`
      <style>
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none !important;
        }
      </style>
      <slot></slot>
    `;
  }
  static get is() {
    return "vaadin-accordion";
  }
  static get properties() {
    return {
      opened: {
        type: Number,
        value: 0,
        notify: true,
        reflectToAttribute: true
      },
      items: {
        type: Array,
        readOnly: true,
        notify: true
      }
    };
  }
  static get observers() {
    return ["_updateItems(items, opened)"];
  }
  constructor() {
    super();
    this._boundUpdateOpened = this._updateOpened.bind(this);
  }
  focus() {
    if (this._observer) {
      this._observer.flush();
    }
    super.focus();
  }
  ready() {
    super.ready();
    this._observer = new FlattenedNodesObserver(this, (info) => {
      this._setItems(this._filterItems(Array.from(this.children)));
      this._filterItems(info.addedNodes).forEach((el) => {
        el.addEventListener("opened-changed", this._boundUpdateOpened);
      });
    });
  }
  _getItems() {
    return this.items;
  }
  _filterItems(array) {
    return array.filter((el) => el instanceof AccordionPanel);
  }
  _updateItems(items, opened) {
    if (items) {
      const itemToOpen = items[opened];
      items.forEach((item) => {
        item.opened = item === itemToOpen;
      });
    }
  }
  _onKeyDown(event) {
    const item = event.composedPath()[0];
    if (!this.items.some((el) => el.focusElement === item)) {
      return;
    }
    super._onKeyDown(event);
  }
  _updateOpened(e) {
    const target = this._filterItems(e.composedPath())[0];
    const idx = this.items.indexOf(target);
    if (e.detail.value) {
      if (target.disabled || idx === -1) {
        return;
      }
      this.opened = idx;
    } else if (!this.items.some((item) => item.opened)) {
      this.opened = null;
    }
  }
};
customElements.define(Accordion.is, Accordion);
/**
 * @license
 * Copyright (c) 2019 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_accordion_theme_lumo_vaadin-accordion__js.js.map
